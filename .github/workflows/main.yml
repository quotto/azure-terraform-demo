permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:
    inputs:
      resource_group:
        description: 'Resource Group'
        required: true
        default: 'my-resource-group'
      address_space:
        description: 'Address Space'
        required: true
        default: '10.0.0.0/24'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  POLICY_DEFINITION_ID: ${{ secrets.POLICY_DEFINITION_ID }}


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          client-id: ${{ env.ARM_CLIENT_ID }}
          tenant-id: ${{ env.ARM_TENANT_ID }}
          subscription-id: ${{ env.ARM_SUBSCRIPTION_ID }}
      - name: remove non active peering
        run: |
          az network vnet peering list \
          --resource-group ${{ github.event.inputs.resource_group }} \
          --vnet-name ${{ github.event.inputs.resource_group }}-vnet \
          --query "[?peeringState=='Connected'].id" \
          --output tsv | xargs -I {} az network vnet peering delete --ids {}
      - name: terraform init
        run: |
          terraform init -backend-config="key=${{ github.event.inputs.resource_group }}.tfstate"
      - name: set tfvars
        run: |
          echo "resource_group_name = \"${{ github.event.inputs.resource_group }}\"" >> terraform.tfvars
          echo "location = \"japaneast\"" >> terraform.tfvars
          echo "address_space = [\"${{ github.event.inputs.address_space }}\"]" >> terraform.tfvars
          echo "other_vnet_resource_group_name = \"sandbox-rg\"" >> terraform.tfvars
          echo "other_vnet_id = \"/subscriptions/${ARM_SUBSCRIPTION_ID}/resourceGroups/sandbox-rg/providers/Microsoft.Network/virtualNetworks/sandbox-vnet\"" >> terraform.tfvars
          echo "other_vnet_name = \"sandbox-vnet\"" >> terraform.tfvars
          echo "policy_definition_id = \"${POLICY_DEFINITION_ID}\"" >> terraform.tfvars
      - name: terraform plan
        run: |
          terraform plan
      - name: terraform apply
        run: |
          terraform apply -auto-approve